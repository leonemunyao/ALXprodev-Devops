#!/bin/bash

DATA_FILE="data.json"
OUTPUT_FILE="pokemon_info.txt"
ERROR_FILE="errors.txt"


log_error() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $1" >> "$ERROR_FILE"
}

validate_json() {
    if ! jq empty "$DATA_FILE" >/dev/null 2>&1; then
        log_error "Invalid JSON format in $DATA_FILE"
        echo "Error: Invalid JSON format in $DATA_FILE. Check $ERROR_FILE for details."
        exit 1
    fi
}

extract_and_format() {
    echo "Extracting Pokemon data from $DATA_FILE..."
    echo "===================================="

    if ! validate_json; then
        echo "Error validating JSON. Check $ERROR_FILE for details."
        exit 1
    fi

    name=$(jq -r '.name' "$DATA_FILE")
    height_raw=$(jq -r '.height' "$DATA_FILE")
    weight_raw=$(jq -r '.weight' "$DATA_FILE")
    type=$(jq -r '.types[].type.name' "$DATA_FILE" | awk '{if(NR==1) result=$1; else result=result"/"$1} END{print result}')
    
    formatted_height=$(echo "$height_raw" | awk '{printf "%.1f", $1/10}')
    formatted_weight=$(echo "$weight_raw" | awk '{printf "%.0f", $1/10}')
    
    name=$(echo "$name" | sed 's/^./\U&/')
    type=$(echo "$type" | sed 's/\b\w/\U&/g')

   
    formatted_output="$name is of type $type, weighs ${formatted_weight}kg, and is ${formatted_height}m tall."
    
    echo "$formatted_output" | tee "$OUTPUT_FILE"

    echo "Data extracted and formatted successfully! Output saved to $OUTPUT_FILE."
}

# Check if the data file exists
if [ ! -f "$DATA_FILE" ]; then
    echo "Data file $DATA_FILE does not exist. Please run the API automation script first."
    exit 1
fi

if ! command -v jq &> /dev/null; then
    log_error "jq command not found. Please install jq to run this script."
    echo "Error: jq command not found. Check $ERROR_FILE for details."
    exit 1
fi

extract_and_format
